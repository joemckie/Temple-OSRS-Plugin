package com.templeosrs.util.collections.utils;

import com.templeosrs.util.collections.CollectionLogCategory;

import java.util.Map;

public class CollectionLogCategoryUtils {
    /**
     * Category aliases to be used in the !col command. e.g. "!col kree"
     */
    public static final Map<String, CollectionLogCategory> CATEGORY_ALIASES = Map.<String, CollectionLogCategory>ofEntries(
            // === Bosses ===
            Map.entry("armadyl", CollectionLogCategory.kree_arra),
            Map.entry("kree", CollectionLogCategory.kree_arra),
            Map.entry("arma", CollectionLogCategory.kree_arra),
            Map.entry("archaeologist", CollectionLogCategory.crazy_archaeologist),
            Map.entry("crazy", CollectionLogCategory.crazy_archaeologist),
            Map.entry("barrows", CollectionLogCategory.barrows_chests),
            Map.entry("artio", CollectionLogCategory.callisto_and_artio),
            Map.entry("callisto", CollectionLogCategory.callisto_and_artio),
            Map.entry("vetion", CollectionLogCategory.vetion_and_calvarion),
            Map.entry("calvarion", CollectionLogCategory.vetion_and_calvarion),
            Map.entry("calv", CollectionLogCategory.vetion_and_calvarion),
            Map.entry("vet", CollectionLogCategory.vetion_and_calvarion),
            Map.entry("corp", CollectionLogCategory.corporeal_beast),
            Map.entry("corporeal", CollectionLogCategory.corporeal_beast),
            Map.entry("dagannoth", CollectionLogCategory.dagannoth_kings),
            Map.entry("dk", CollectionLogCategory.dagannoth_kings),
            Map.entry("dks", CollectionLogCategory.dagannoth_kings),
            Map.entry("duke", CollectionLogCategory.duke_sucellus),
            Map.entry("sucellus", CollectionLogCategory.duke_sucellus),
            Map.entry("elemental", CollectionLogCategory.chaos_elemental),
            Map.entry("fanatic", CollectionLogCategory.chaos_fanatic),
            Map.entry("graardor", CollectionLogCategory.general_graardor),
            Map.entry("bandos", CollectionLogCategory.general_graardor),
            Map.entry("grotesque", CollectionLogCategory.grotesque_guardians),
            Map.entry("gg", CollectionLogCategory.grotesque_guardians),
            Map.entry("ggs", CollectionLogCategory.grotesque_guardians),
            Map.entry("hydra", CollectionLogCategory.alchemical_hydra),
            Map.entry("alchemical" , CollectionLogCategory.alchemical_hydra),
            Map.entry("kbd", CollectionLogCategory.king_black_dragon),
            Map.entry("kalphite", CollectionLogCategory.kalphite_queen),
            Map.entry("kril", CollectionLogCategory.kril_tsutsaroth),
            Map.entry("zammy", CollectionLogCategory.kril_tsutsaroth),
            Map.entry("zamorak", CollectionLogCategory.kril_tsutsaroth),
            Map.entry("leviathan", CollectionLogCategory.the_leviathan),
            Map.entry("levi", CollectionLogCategory.the_leviathan),
            Map.entry("mole", CollectionLogCategory.giant_mole),
            Map.entry("moons", CollectionLogCategory.moons_of_peril),
            Map.entry("muspah", CollectionLogCategory.phantom_muspah),
            Map.entry("nightmare", CollectionLogCategory.the_nightmare),
            Map.entry("phosani", CollectionLogCategory.the_nightmare),
            Map.entry("phn", CollectionLogCategory.the_nightmare),
            Map.entry("sire", CollectionLogCategory.abyssal_sire),
            Map.entry("spindel", CollectionLogCategory.venenatis_and_spindel),
            Map.entry("venenatis", CollectionLogCategory.venenatis_and_spindel),
            Map.entry("thermonuclear", CollectionLogCategory.thermonuclear_smoke_devil),
            Map.entry("thermy", CollectionLogCategory.thermonuclear_smoke_devil),
            Map.entry("titans", CollectionLogCategory.royal_titans),
            Map.entry("royal", CollectionLogCategory.royal_titans),
            Map.entry("rt", CollectionLogCategory.royal_titans),
            Map.entry("tormented", CollectionLogCategory.tormented_demons),
            Map.entry("tds", CollectionLogCategory.tormented_demons),
            Map.entry("whisperer", CollectionLogCategory.the_whisperer),
            Map.entry("whisp", CollectionLogCategory.the_whisperer),
            Map.entry("zilyana", CollectionLogCategory.commander_zilyana),
            Map.entry("sara", CollectionLogCategory.commander_zilyana),
            Map.entry("zily" , CollectionLogCategory.commander_zilyana),
            Map.entry("saradomin" , CollectionLogCategory.commander_zilyana),
            Map.entry("amox", CollectionLogCategory.amoxliatl),
            Map.entry("vork", CollectionLogCategory.vorkath),
            Map.entry("huey", CollectionLogCategory.hueycoatl),
            Map.entry("vard", CollectionLogCategory.vardorvis),
            Map.entry("zul", CollectionLogCategory.zulrah),

            // === Clue Scrolls ===
            Map.entry("beginner_clue", CollectionLogCategory.beginner_treasure_trails),
            Map.entry("easy_clue", CollectionLogCategory.easy_treasure_trails),
            Map.entry("elite_clue", CollectionLogCategory.elite_treasure_trails),
            Map.entry("hard_clue", CollectionLogCategory.hard_treasure_trails),
            Map.entry("master_clue", CollectionLogCategory.master_treasure_trails),
            Map.entry("medium_clue", CollectionLogCategory.medium_treasure_trails),
            Map.entry("shared_clue", CollectionLogCategory.shared_treasure_trail_rewards),
            Map.entry("beginner", CollectionLogCategory.beginner_treasure_trails),
            Map.entry("easy", CollectionLogCategory.easy_treasure_trails),
            Map.entry("medium", CollectionLogCategory.medium_treasure_trails),
            Map.entry("hard", CollectionLogCategory.hard_treasure_trails),
            Map.entry("elite", CollectionLogCategory.elite_treasure_trails),
            Map.entry("master", CollectionLogCategory.master_treasure_trails),
            Map.entry("shared", CollectionLogCategory.shared_treasure_trail_rewards),


            // === Minigames & Activities ===
            Map.entry("aerial", CollectionLogCategory.aerial_fishing),
            Map.entry("champions", CollectionLogCategory.champions_challenge),
            Map.entry("chompy", CollectionLogCategory.chompy_bird_hunting),
            Map.entry("creature", CollectionLogCategory.creature_creation),
            Map.entry("den", CollectionLogCategory.rogues_den),
            Map.entry("druids", CollectionLogCategory.chaos_druids),
            Map.entry("events", CollectionLogCategory.random_events),
            Map.entry("experiment", CollectionLogCategory.gloughs_experiments),
            Map.entry("glough", CollectionLogCategory.gloughs_experiments),
            Map.entry("fossil", CollectionLogCategory.fossil_island_notes),
            Map.entry("gotr", CollectionLogCategory.guardians_of_the_rift),
            Map.entry("rift", CollectionLogCategory.guardians_of_the_rift),
            Map.entry("hunter", CollectionLogCategory.hunter_guild),
            Map.entry("lms", CollectionLogCategory.last_man_standing),
            Map.entry("mixology", CollectionLogCategory.mastering_mixology),
            Map.entry("mlm", CollectionLogCategory.motherlode_mine),
            Map.entry("monkey", CollectionLogCategory.monkey_backpacks),
            Map.entry("notes", CollectionLogCategory.my_notes),
            Map.entry("pest", CollectionLogCategory.pest_control),
            Map.entry("revs", CollectionLogCategory.revenants),
            Map.entry("rev", CollectionLogCategory.revenants),
            Map.entry("rooftop", CollectionLogCategory.rooftop_agility),
            Map.entry("sepulchre", CollectionLogCategory.hallowed_sepulchre),
            Map.entry("hs", CollectionLogCategory.hallowed_sepulchre),
            Map.entry("shades", CollectionLogCategory.shades_of_mortton),
            Map.entry("shayzien", CollectionLogCategory.shayzien_armour),
            Map.entry("stars", CollectionLogCategory.shooting_stars),
            Map.entry("trekking", CollectionLogCategory.temple_trekking),
            Map.entry("tithe", CollectionLogCategory.tithe_farm),
            Map.entry("brewing", CollectionLogCategory.trouble_brewing),
            Map.entry("trouble", CollectionLogCategory.trouble_brewing),
            Map.entry("tb", CollectionLogCategory.trouble_brewing),
            Map.entry("volcanic", CollectionLogCategory.volcanic_mine),
            Map.entry("wyrm", CollectionLogCategory.colossal_wyrm_agility),
            Map.entry("ba", CollectionLogCategory.barbarian_assault),
            Map.entry("assault", CollectionLogCategory.barbarian_assault),
            Map.entry("barbarian", CollectionLogCategory.barbarian_assault),
            Map.entry("brimhaven", CollectionLogCategory.brimhaven_agility_arena),
            Map.entry("trawler", CollectionLogCategory.fishing_trawler),
            Map.entry("wars", CollectionLogCategory.castle_wars),

            // === Miscellaneous ===
            Map.entry("3rd", CollectionLogCategory.third_age),
            Map.entry("misc", CollectionLogCategory.miscellaneous),
            Map.entry("pets", CollectionLogCategory.all_pets),
            Map.entry("skilling", CollectionLogCategory.skilling_pets),

            // === Raids & Endgame ===
            Map.entry("cg", CollectionLogCategory.the_gauntlet),
            Map.entry("gauntlet", CollectionLogCategory.the_gauntlet),
            Map.entry("colosseum", CollectionLogCategory.fortis_colosseum),
            Map.entry("colo", CollectionLogCategory.fortis_colosseum),
            Map.entry("cox", CollectionLogCategory.chambers_of_xeric),
            Map.entry("chambers", CollectionLogCategory.chambers_of_xeric),
            Map.entry("fightcaves", CollectionLogCategory.the_fight_caves),
            Map.entry("jad", CollectionLogCategory.the_fight_caves),
            Map.entry("foundry", CollectionLogCategory.giants_foundry),
            Map.entry("homes", CollectionLogCategory.mahogany_homes),
            Map.entry("mahogany", CollectionLogCategory.mahogany_homes),
            Map.entry("inferno", CollectionLogCategory.the_inferno),
            Map.entry("zuk", CollectionLogCategory.the_inferno),
            Map.entry("mta", CollectionLogCategory.magic_training_arena),
            Map.entry("restaurant", CollectionLogCategory.gnome_restaurant),
            Map.entry("toa", CollectionLogCategory.tombs_of_amascut),
            Map.entry("tombs", CollectionLogCategory.tombs_of_amascut),
            Map.entry("tob", CollectionLogCategory.theatre_of_blood),
            Map.entry("theatre", CollectionLogCategory.theatre_of_blood)
    );

    /**
     * Category title overrides to be used by the !col command response.
     * Provides a better format than title-casing for categories that contain punctuation, e.g. "Kree Arra" -> "Kree'arra"
     */
    public static Map<CollectionLogCategory, String> CATEGORY_TITLE_OVERRIDES = Map.ofEntries(
            Map.entry(CollectionLogCategory.kree_arra, "Kree'arra"),
            Map.entry(CollectionLogCategory.vetion_and_calvarion, "Vet'ion and Calvar'ion"),
            Map.entry(CollectionLogCategory.kril_tsutsaroth, "K'ril Tsutsaroth"),
            Map.entry(CollectionLogCategory.giants_foundry, "Giants' Foundry"),
            Map.entry(CollectionLogCategory.rogues_den, "Rogues' Den"),
            Map.entry(CollectionLogCategory.shades_of_mortton, "Shades of Mort'ton"),
            Map.entry(CollectionLogCategory.champions_challenge, "Champions' Challenge"),
            Map.entry(CollectionLogCategory.gloughs_experiments, "Glough's Experiments")
    );
}